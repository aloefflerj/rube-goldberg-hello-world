version: '3.4'
services:
  api:
    container_name: goldberg_api
    build: 
        context: ..
        dockerfile: ./env/api.Dockerfile
        args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    restart: unless-stopped
    ports: 
      - 11000:80
    volumes:
      - ../api:/var/www/html
    env_file:
      - ./.env
    depends_on:
      - mysql
    networks:
      - goldberg_network

  client:
    container_name: goldberg_client
    build: 
      context: ..
      dockerfile: ./env/client.Dockerfile
    restart: unless-stopped
    ports:
      - 12000:5173
    env_file:
      - .env
    volumes:
      - ../client:/app
      - /app/node_modules
    networks:
      - goldberg_network
    command: npm run dev

  mysql:
    image: mysql:latest
    container_name: goldberg_mysql
    restart: unless-stopped
    env_file: .env
    environment:
      # MYSQL_DATABASE: 'goldberg'
      - MYSQL_USER=web
      - MYSQL_PASSWORD=web
      - MYSQL_ROOT_PASSWORD=root
    ports:
      - 13000:3306
    volumes:
      - my-db:/var/lib/mysql
      - ./dump.sql:/docker-entrypoint-initdb.d/dump.sql
    networks:
      - goldberg_network

networks:
  goldberg_network:
      driver: bridge
volumes:
  node_modules:
  my-db: